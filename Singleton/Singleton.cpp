/*
* А зачем вообще singleton-ы?
*   1. Управление конфигурацией приложения: Синглтон может содержать настройки приложения, такие как пути к файлам, 
  URL-адреса серверов, пароли и т.д. Это позволяет избежать дублирования настроек в разных частях кода и обеспечивает 
  их централизованное управление.
    2. Ведение логов: Синглтон может отвечать за логирование событий в приложении. Это упрощает настройку и использование 
  системы логирования, поскольку все вызовы к ней будут идти через один объект.
    3. Доступ к ресурсам: Синглтон может управлять доступом к внешним ресурсам, таким как файлы, базы данных, 
    сетевые соединения и т.п. Это позволяет избежать многократного открытия и закрытия ресурсов, 
    что может снизить производительность приложения.
*/

#include <iostream>

class Singleton {
protected:
    Singleton() { printf("Singleton was created\n"); }
public:
    static Singleton get_instance() {
        static Singleton s;
        return s;
    }
    void dO() { printf("BABUBE!!\n"); }
};

int main()
{
    Singleton::get_instance().dO();
    Singleton::get_instance();
    std::cout << "Hello World!\n";
}


